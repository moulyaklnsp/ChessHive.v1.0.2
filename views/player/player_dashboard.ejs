<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Player Dashboard - ChessHive</title>
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Playfair+Display:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --sea-green: #2E8B57;
            --cream: #FFFDD0;
            --sky-blue: #87CEEB;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Playfair Display', serif;
            background-color: var(--cream);
            min-height: 100vh;
            display: flex;
        }

        .sidebar {
            width: 280px;
            background-color: var(--sea-green);
            color: white;
            height: 100vh;
            position: fixed;
            left: 0; /* Changed from -280px to 0 to make sidebar visible by default */
            top: 0;
            padding-top: 1rem;
            z-index: 1000;
            box-shadow: 4px 0 10px rgba(0,0,0,0.1);
        }

        .sidebar-header {
            text-align: center;
            padding: 1rem;
            border-bottom: 2px solid rgba(255, 255, 255, 0.1);
            margin-bottom: 1rem;
        }

        .sidebar-header h2 {
            font-family: 'Cinzel', serif;
            color: var(--cream);
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
        }

        .nav-section {
            margin-bottom: 1rem;
            padding: 0 1rem;
        }

        .nav-section-title {
            color: var(--cream);
            font-size: 0.9rem;
            text-transform: uppercase;
            padding: 0.5rem 1rem;
            opacity: 0.7;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            gap: 0.8rem;
            color: white;
            text-decoration: none;
            padding: 0.8rem 1.5rem;
            transition: all 0.3s ease;
            font-family: 'Playfair Display', serif;
            border-radius: 5px;
            margin: 0.2rem 0;
        }

        .sidebar a:hover {
            background: rgba(135, 206, 235, 0.2);
            color: var(--cream);
            transform: translateX(5px);
        }

        .sidebar a i {
            width: 20px;
            text-align: center;
        }

        /* Removed menu-btn since we no longer need it for a permanent sidebar */

        .content {
            flex-grow: 1;
            margin-left: 280px; /* Changed from 60px to match sidebar width */
            padding: 2rem;
        }

        /* We don't need the sidebar-open class anymore since sidebar is always visible */

        h1 {
            font-family: 'Cinzel', serif;
            color: var(--sea-green);
            margin-bottom: 2rem;
            font-size: 2.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .updates-section {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }

        .updates-section:hover {
            transform: translateY(-5px);
        }

        .updates-section h3 {
            font-family: 'Cinzel', serif;
            color: var(--sea-green);
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.8rem;
            font-size: 1.5rem;
        }
        .approve-btn{
            padding: 0.6rem 1rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-family: 'Cinzel', serif;
            font-weight: bold;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            background-color: var(--sea-green);
            color: var(--cream);
        }
                .approve-btn.reject {
            background-color: #ff4d4d; /* Red for reject */
        }
        .approve-btn.reject:hover {
            background-color: #cc0000;
        }
        .updates-section ul {
            list-style: none;
        }

        .updates-section li {
            padding: 1rem;
            border-bottom: 1px solid rgba(46, 139, 87, 0.1);
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .updates-section li:last-child {
            border-bottom: none;
        }

        .updates-section li:hover {
            background: rgba(135, 206, 235, 0.1);
            transform: translateX(5px);
            border-radius: 8px;
        }

        .updates-section li i {
            color: var(--sea-green);
        }

        .tournament-info, .item-info {
            flex-grow: 1;
        }

        .price-tag {
            background: var(--sea-green);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
        }

        .date-tag {
            color: var(--sea-green);
            font-style: italic;
        }

        .logout-box {
            position: absolute;
            bottom: 2rem;
            width: 100%;
            padding: 0 2rem;
        }

        .logout-box button {
            width: 100%;
            background: var(--sky-blue);
            color: var(--sea-green);
            border: none;
            padding: 1rem;
            border-radius: 8px;
            cursor: pointer;
            font-family: 'Cinzel', serif;
            font-weight: bold;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .logout-box button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            background: #6CB4D4;
        }

        /* Modified the media query for responsive design */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                left: -100%; /* Hide sidebar on mobile by default */
                transition: 0.3s;
            }

            .sidebar.open {
                left: 0;
            }

            .content {
                margin-left: 0;
                padding: 1rem;
            }

            .updates-section {
                padding: 1rem;
            }

            h1 {
                font-size: 1.8rem;
                flex-direction: column;
                text-align: center;
                gap: 0.5rem;
            }

            /* Add back menu button for mobile view */
            .menu-btn {
                display: block;
                position: fixed;
                left: 1rem;
                top: 1rem;
                background: var(--sea-green);
                color: white;
                border: none;
                padding: 0.8rem;
                border-radius: 8px;
                cursor: pointer;
                z-index: 1001;
                transition: all 0.3s ease;
            }

            .menu-btn:hover {
                background: #236B43;
                transform: scale(1.05);
            }
        }
    </style>
</head>
<body>
    <!-- Menu button only for mobile view -->
    <button class="menu-btn" id="menuBtn" style="display: none;">
        <i class="fas fa-bars"></i>
    </button>
    
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h2><i class="fas fa-chess"></i> ChessHive</h2>
            <% if (typeof playerName !== "undefined") { %>
                <p>Welcome, <%= playerName %>!</p>
            <% } %>
        </div>
    
        <div class="nav-section">
            <div class="nav-section-title">Main Menu</div>
            <a href="/player/player_profile" class="nav-item">
                <i class="fas fa-user"></i>
                <span>Profile</span>
            </a>
            <a href="/player/growth" class="nav-item">
                <i class="fas fa-chart-line"></i>
                <span>Growth Tracking</span>
            </a>
            <a href="/player/player_tournament" class="nav-item">
                <i class="fas fa-trophy"></i>
                <span>Tournaments</span>
            </a>
            <!-- <a href="/player/matches" class="nav-item">
                <i class="fas fa-chess"></i>
                <span>One-on-One Matches</span>
            </a> -->
        </div>
    
        <div class="nav-section">
            <div class="nav-section-title">Services</div>
            <a href="/player/subscription" class="nav-item">
                <i class="fas fa-star"></i>
                <span>Manage Subscription</span>
            </a>
            <a href="/player/store" class="nav-item">
                <i class="fas fa-store"></i>
                <span>E-Commerce Store</span>
            </a>
            <!-- <a href="/player/chat" class="nav-item">
                <i class="fas fa-comments"></i>
                <span>Live Chat</span>
            </a> -->
        </div>

        <div class="logout-box">
            <button onclick="handleLogout()">
                <i class="fas fa-sign-out-alt"></i>
                <span>Log Out</span>
            </button>
        </div>
        
    </div>
    <div class="content">
        <% if (typeof playerName !== "undefined") { %>
            <h1>
                <i class="fas fa-chess-king"></i>
                Welcome to ChessHive, <%= playerName %>!
            </h1>
        <% } %>

         <!-- New Team Requests Section -->
<div class="updates-section team-requests">
    <h3>Pending Team Tournament Requests</h3>
    <ul>
        <% if (typeof teamRequests !== "undefined" && teamRequests.length > 0) { %>
            <% 
                const currentUser = playerName; 
                const pendingRequests = teamRequests.filter(request => {
                    return !(
                        (request.player1_name === currentUser && request.player1_approved) ||
                        (request.player2_name === currentUser && request.player2_approved) ||
                        (request.player3_name === currentUser && request.player3_approved)
                    );
                });
            %>
            <% if (pendingRequests.length > 0) { %>
                <% pendingRequests.forEach(request => { %>
                    <li>
                        <strong><%= request.tournamentName %></strong> - 
                        Captain: <%= request.captainName %> | 
                        Team: <%= request.player1_name %>, <%= request.player2_name %>, <%= request.player3_name %>
                        <form action="/player/approve-team-request" method="POST" style="display: inline;">
                            <input type="hidden" name="requestId" value="<%= request._id.toString() %>">
                            <button type="submit" class="approve-btn">Approve</button>
                        </form>
                    </li>
                <% }); %>
            <% } else { %>
                <p>No pending team requests requiring your approval.</p>
            <% } %>
        <% } else { %>
            <p>No pending team requests.</p>
        <% } %>
    </ul>
</div>

        <div class="updates-section">
            <h3><i class="fas fa-trophy"></i> Latest Tournaments</h3>
            <ul>
                <% if (typeof latestTournaments !== "undefined" && latestTournaments.length > 0) { %>
                    <% latestTournaments.forEach(tournament => { %>
                        <li>
                            <i class="fas fa-chess-knight"></i>
                            <div class="tournament-info">
                                <strong><%= tournament.name %></strong>
                                <div class="date-tag">
                                    <i class="fas fa-calendar-alt"></i> <%= tournament.date %>
                                </div>
                            </div>
                        </li>
                    <% }); %>
                <% } else { %>
                    <li>
                        <i class="fas fa-info-circle"></i>
                        No tournaments available at the moment.
                    </li>
                <% } %>
            </ul>
        </div>

        <div class="updates-section">
            <h3><i class="fas fa-shopping-bag"></i> Latest Store Items</h3>
            <ul>
                <% if (typeof latestItems !== "undefined" && latestItems.length > 0) { %>
                    <% latestItems.forEach(item => { %>
                        <li>
                            <i class="fas fa-chess-pawn"></i>
                            <div class="item-info">
                                <strong><%= item.name %></strong>
                            </div>
                            <span class="price-tag">
                                <i class="fas fa-tag"></i> ₹<%= item.price %>
                            </span>
                        </li>
                    <% }); %>
                <% } else { %>
                    <li>
                        <i class="fas fa-info-circle"></i>
                        No items available at the moment.
                    </li>
                <% } %>
            </ul>
        </div>
    </div>
    
    <script>
        // Check if the device is mobile
        function isMobile() {
            return window.innerWidth <= 768;
        }

        // Show/hide menu button based on screen size
        function updateMenuButtonVisibility() {
            const menuBtn = document.getElementById("menuBtn");
            const sidebar = document.getElementById("sidebar");
            
            if (isMobile()) {
                menuBtn.style.display = "block";
                // Ensure sidebar is hidden on mobile by default
                sidebar.style.left = "-100%";
            } else {
                menuBtn.style.display = "none";
                // Ensure sidebar is visible on desktop
                sidebar.style.left = "0";
            }
        }

        // Toggle sidebar function (only used on mobile)
        function toggleSidebar() {
            const sidebar = document.getElementById("sidebar");
            
            if (sidebar.style.left === "0px") {
                sidebar.style.left = "-100%";
            } else {
                sidebar.style.left = "0px";
            }
        }
    
        // Logout function
        function handleLogout() {
                window.location.href = '/login';
        }
    
        // Add click event listeners to all nav items
        document.querySelectorAll('.nav-item').forEach(item => {
            item.addEventListener('click', function(e) {
                // Add loading state if needed
                this.style.opacity = '0.7';
                
                // Navigate to the href
                window.location.href = this.getAttribute('href');
            });
        });

        // Add event listener for menu button
        document.getElementById("menuBtn").addEventListener("click", toggleSidebar);

        // Run on page load and resize
        window.addEventListener("load", updateMenuButtonVisibility);
        window.addEventListener("resize", updateMenuButtonVisibility);
    </script>
</body>
</html>